{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { emailSignInFailure, googleSignInFailure, googleSignInSuccess } from './user.action';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {} catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","emailSignInFailure","googleSignInFailure","googleSignInSuccess","signInWithGoogle","user","signInWithPopup","userRef","userSnapShot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","onEmailSignInStart","EMAIL_SIGN_IN_START","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,mBAAlD,QAA6E,eAA7E;AAGA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMP,IAAI,CAACQ,eAAL,CAAqBP,cAArB,CAArB;AACA,UAAMQ,OAAO,GAAG,MAAMX,IAAI,CAACI,yBAAD,EAA2BK,IAA3B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CAACS,mBAAmB,CAAC;AAACO,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAqB,SAAGF,YAAY,CAACG,IAAb;AAAxB,KAAD,CAApB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACb,UAAMlB,GAAG,CAACQ,mBAAmB,CAACU,KAAD,CAApB,CAAT;AACF;AACJ;AACD,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMpB,UAAU,CAACI,eAAe,CAACiB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUW,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAT,CAA1B,EAAsD;AACzD,MAAI,CAEH,CAFD,CAEE,OAAON,KAAP,EAAc;AACZ,UAAMlB,GAAG,CAACO,kBAAkB,CAACW,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUO,kBAAV,GAA8B;AACjC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,mBAAjB,EAAsCL,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUM,QAAV,GAAoB;AACvB,QAAM1B,GAAG,CAAC,CACNC,IAAI,CAACiB,mBAAD,CADE,EAENjB,IAAI,CAACuB,kBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { emailSignInFailure, googleSignInFailure, googleSignInSuccess } from './user.action';\n\n\nexport function* signInWithGoogle (){\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument,user);\n        const userSnapShot = yield userRef.get();\n        yield put(googleSignInSuccess({id:userSnapShot.id, ...userSnapShot.data()}));\n    } catch (error) {\n       yield put(googleSignInFailure(error))\n    }\n}\nexport function* onGoogleSignInStart(){\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* signInWithEmail({payload:{email, password}}){\n    try {\n        \n    } catch (error) {\n        yield put(emailSignInFailure(error));\n    }\n}\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSaga(){\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}