{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore'; //crédentials pour la base de donnéss \n\nconst config = {\n  apiKey: \"AIzaSyDICIOh_AmDSB5WqA2Xx7rpp8A3hVhQJZw\",\n  authDomain: \"e-commerce-c29b5.firebaseapp.com\",\n  projectId: \"e-commerce-c29b5\",\n  storageBucket: \"e-commerce-c29b5.appspot.com\",\n  messagingSenderId: \"811568928846\",\n  appId: \"1:811568928846:web:a6c8f7c9e6cdf1de05cb1f\",\n  measurementId: \"G-EC6223GXCF\"\n}; //initialisation de la base de données\n\nfirebase.initializeApp(config); //checker si l'utilisateur existe pour l'insérer sans la base de donnée\n\nexport const createUserProfileDocument = async (authUser, additionalData) => {\n  if (!authUser) return;\n  const userRef = firestore.doc(`users/${authUser.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = authUser;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocument = (collectionName, objectToAdd) => {}; //exposer ces variable  ailleur\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","authUser","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocument","collectionName","objectToAdd","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP,C,CAGA;;AACA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,kCAFD;AAGXC,EAAAA,SAAS,EAAE,kBAHA;AAIXC,EAAAA,aAAa,EAAE,8BAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf,C,CASA;;AACER,QAAQ,CAACS,aAAT,CAAuBR,MAAvB,E,CAGA;;AACA,OAAO,MAAMS,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAkC;AACzE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAIC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAjB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBV,QAA7B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AACDC,QAAAA,KADC;AACMC,QAAAA,SADN;AACiB,WAAGV;AADpB,OAAZ,CAAN;AAGH,KAJD,CAIE,OAAOa,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ;;AAED,SAAOf,OAAP;AACH,CAnBQ;AAqBT,OAAO,MAAMgB,wBAAwB,GAAG,CAACC,cAAD,EAAiBC,WAAjB,KAA+B,CAEtE,CAFM,C,CAIP;;AACE,OAAO,MAAOC,IAAI,GAAGhC,QAAQ,CAACgC,IAAT,EAAd;AACP,OAAO,MAAMlB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMmB,QAAQ,GAAG,IAAIjC,QAAQ,CAACgC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAKL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA9B;AAGP,eAAejC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n\n//crédentials pour la base de donnéss \nconst config = {\n    apiKey: \"AIzaSyDICIOh_AmDSB5WqA2Xx7rpp8A3hVhQJZw\",\n    authDomain: \"e-commerce-c29b5.firebaseapp.com\",\n    projectId: \"e-commerce-c29b5\",\n    storageBucket: \"e-commerce-c29b5.appspot.com\",\n    messagingSenderId: \"811568928846\",\n    appId: \"1:811568928846:web:a6c8f7c9e6cdf1de05cb1f\",\n    measurementId: \"G-EC6223GXCF\"\n  };\n//initialisation de la base de données\n  firebase.initializeApp(config);\n\n\n  //checker si l'utilisateur existe pour l'insérer sans la base de donnée\n  export const createUserProfileDocument = async (authUser, additionalData)=>{\n    if(!authUser) return;\n    \n    const userRef =  firestore.doc(`users/${authUser.uid}`);\n    const snapShot = await userRef.get();\n\n    if(!snapShot.exists){\n        const {displayName, email} = authUser;\n        const createdAt = new Date();\n        try {\n            await userRef.set({\n                displayName, email, createdAt, ...additionalData\n            })\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    return userRef;\n}\n\nexport const addCollectionAndDocument = (collectionName, objectToAdd)=>{\n  \n}\n\n//exposer ces variable  ailleur\n  export const  auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({prompt:'select_account'});\n  export const signInWithGoogle = ()=> auth.signInWithPopup(provider);\n\n\n  export default firebase;"]},"metadata":{},"sourceType":"module"}