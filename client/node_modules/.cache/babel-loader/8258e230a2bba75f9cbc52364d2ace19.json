{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport rootReducer from './../redux/root-reducer';\nimport logger from 'redux-logger';\nimport persistStore from \"redux-persist/es/persistStore\"; //import thunk from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from \"./boutique/boutique.sagas\";\nimport rootSaga from \"./root-saga\";\nconst sagaMiddeware = createSagaMiddleware();\nconst middleware = [sagaMiddeware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middleware.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\nsagaMiddeware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/redux/store.js"],"names":["applyMiddleware","createStore","rootReducer","logger","persistStore","createSagaMiddleware","fetchCollectionsStart","rootSaga","sagaMiddeware","middleware","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,2BAAtC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAGA,MAAMC,aAAa,GAAGH,oBAAoB,EAA1C;AACA,MAAMI,UAAU,GAAG,CAACD,aAAD,CAAnB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAwB,aAA3B,EAAyC;AACrCH,EAAAA,UAAU,CAACI,IAAX,CAAgBV,MAAhB;AACH;;AAGD,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACC,WAAD,EAAcF,eAAe,CAAC,GAAGS,UAAJ,CAA7B,CAAzB;AAEPD,aAAa,CAACO,GAAd,CAAkBR,QAAlB;AAEA,OAAO,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAQE,EAAAA;AAAR,CAAf","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\nimport rootReducer from './../redux/root-reducer';\nimport logger from 'redux-logger';\nimport persistStore from \"redux-persist/es/persistStore\";\n//import thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from \"./boutique/boutique.sagas\";\nimport rootSaga from \"./root-saga\";\n\n\nconst sagaMiddeware = createSagaMiddleware();\nconst middleware = [sagaMiddeware];\n\nif(process.env.NODE_ENV ===\"development\"){\n    middleware.push(logger)\n}\n\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\n\nsagaMiddeware.run(rootSaga)\n\nexport const persistor = persistStore(store);\n\nexport default {store, persistor};"]},"metadata":{},"sourceType":"module"}