{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport boutiqueActionType from './types.boutique';\nimport { firestore, convertedtCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFail } from './actions.boutuique';\n\nfunction* fetchCollectionAsync() {\n  yield console.log(\"I'm fired\");\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snapshot => {\n    const collectionMap = convertedtCollectionSnapshotToMap(snapshot);\n    dispatch(fetchCollectionSuccess(collectionMap));\n  }).catch(err => dispatch(fetchCollectionFail(err.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(boutiqueActionType.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/redux/boutique/boutique.sagas.js"],"names":["takeEvery","boutiqueActionType","firestore","convertedtCollectionSnapshotToMap","fetchCollectionSuccess","fetchCollectionFail","fetchCollectionAsync","console","log","collectionRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionMap","catch","err","message","FETCH_COLLECTION_START"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,oBAAxB;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;AACA,SAASC,SAAT,EAAoBC,iCAApB,QAA6D,+BAA7D;AACA,SAASC,sBAAT,EAAiCC,mBAAjC,QAA4D,qBAA5D;;AAGA,UAAUC,oBAAV,GAAgC;AAC7B,QAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN;AACA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AACAH,EAAAA,aAAa,CAACI,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAE;AAC/B,UAAMC,aAAa,GAAIb,iCAAiC,CAACY,QAAD,CAAxD;AACAJ,IAAAA,QAAQ,CAACP,sBAAsB,CAACY,aAAD,CAAvB,CAAR;AACD,GAHH,EAGKC,KAHL,CAGWC,GAAG,IAAIP,QAAQ,CAACN,mBAAmB,CAACa,GAAG,CAACC,OAAL,CAApB,CAH1B;AAIF;;AAED,OAAO,UAAUP,qBAAV,GAAiC;AACvC,QAAMZ,SAAS,CAACC,kBAAkB,CAACmB,sBAApB,EAA4Cd,oBAA5C,CAAf;AACA","sourcesContent":["import {takeEvery} from 'redux-saga/effects';\nimport boutiqueActionType from './types.boutique';\nimport { firestore, convertedtCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFail } from './actions.boutuique';\n\n\nfunction* fetchCollectionAsync(){\n   yield console.log(\"I'm fired\");\n   const collectionRef = firestore.collection('collections'); \n   dispatch(fetchCollectionsStart());   \n   collectionRef.get().then(snapshot=>{\n       const collectionMap =  convertedtCollectionSnapshotToMap(snapshot);\n       dispatch(fetchCollectionSuccess(collectionMap));\n     }).catch(err => dispatch(fetchCollectionFail(err.message)));\n}\n\nexport function* fetchCollectionsStart(){\n yield takeEvery(boutiqueActionType.FETCH_COLLECTION_START, fetchCollectionAsync)\n}"]},"metadata":{},"sourceType":"module"}