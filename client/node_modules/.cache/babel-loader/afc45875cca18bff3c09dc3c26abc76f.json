{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/pages/boutique/boutique.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport './boutique.scss';\nimport VitrineOverview from '../../components/vitrine-overview/vitrine-overview';\nimport CollectionPage from '../collection/collection';\nimport { convertedtCollectionSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport { initCollectionsData } from '../../redux/boutique/actions.boutuique';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spiner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst vitrineOverviewWithSpinner = WithSpinner(VitrineOverview);\nconst collectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass Boutique extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true\n    };\n    this.unsubscribFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      initCollectionData\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertedtCollectionSnapshotToMap(snapshot);\n      initCollectionData(collectionMap);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      isLoading\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(\"vitrineOverviewWithSpinner\", {\n          isLoading: isLoading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(\"collectionPageWithSpinner\", {\n          isLoading: isLoading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 79\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispactchToProps = dispatch => ({\n  initCollectionData: collectionMap => dispatch(initCollectionsData(collectionMap))\n});\n\nexport default connect(null, mapDispactchToProps)(Boutique);","map":{"version":3,"sources":["/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/pages/boutique/boutique.jsx"],"names":["React","Route","VitrineOverview","CollectionPage","convertedtCollectionSnapshotToMap","firestore","initCollectionsData","connect","WithSpinner","vitrineOverviewWithSpinner","collectionPageWithSpinner","Boutique","Component","state","isLoading","unsubscribFromSnapshot","componentDidMount","initCollectionData","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","setState","render","match","path","mapDispactchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAM,iBAAN;AACA,OAAOC,eAAP,MAA4B,oDAA5B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAASC,iCAAT,EAA4CC,SAA5C,QAA6D,+BAA7D;AACA,SAASC,mBAAT,QAAoC,wCAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,qDAAxB;;AAEA,MAAMC,0BAA0B,GAAGD,WAAW,CAACN,eAAD,CAA9C;AACA,MAAMQ,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC7B;AACFC,MAAAA,SAAS,EAAC;AADR,KAD6B;AAAA,SAInCC,sBAJmC,GAIV,IAJU;AAAA;;AAKnCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACC,MAAAA;AAAD,QAAuB,KAAKC,KAAlC;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAgB;AACvC,YAAMC,aAAa,GAAInB,iCAAiC,CAACkB,QAAD,CAAxD;AAEAL,MAAAA,kBAAkB,CAACM,aAAD,CAAlB;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,SAAS,EAAC;AAAX,OAAd;AACD,KALD;AAMH;;AACDW,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKR,KAArB;AACA,UAAM;AAACJ,MAAAA;AAAD,QAAc,KAAKI,KAAzB;AAGA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGT,KAAD,iBAAU;AAA4B,UAAA,SAAS,EAAEJ,SAAvC;AAAA,aAAsDI;AAAtD;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAQ,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA5B;AAA6C,QAAA,MAAM,EAAGT,KAAD,iBAAS;AAA2B,UAAA,SAAS,EAAEJ,SAAtC;AAAA,aAAqDI;AAArD;AAAA;AAAA;AAAA;AAAA;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA1BkC;;AA4BnC,MAAMU,mBAAmB,GAAGC,QAAQ,KAAK;AACrCZ,EAAAA,kBAAkB,EAAEM,aAAa,IAAIM,QAAQ,CAACvB,mBAAmB,CAACiB,aAAD,CAApB;AADR,CAAL,CAApC;;AAGJ,eAAehB,OAAO,CAAC,IAAD,EAAOqB,mBAAP,CAAP,CAAoCjB,QAApC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport'./boutique.scss';\nimport VitrineOverview from '../../components/vitrine-overview/vitrine-overview';\nimport CollectionPage from '../collection/collection';\nimport { convertedtCollectionSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport { initCollectionsData } from '../../redux/boutique/actions.boutuique';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spiner/with-spinner.component';\n\nconst vitrineOverviewWithSpinner = WithSpinner(VitrineOverview);\nconst collectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass Boutique extends React.Component {\n    state={\n        isLoading:true\n    }\n    unsubscribFromSnapshot = null;\n    componentDidMount(){\n        const {initCollectionData} = this.props;\n        const collectionRef = firestore.collection('collections');\n        collectionRef.onSnapshot(async snapshot=>{\n          const collectionMap =  convertedtCollectionSnapshotToMap(snapshot);\n\n          initCollectionData(collectionMap);\n          this.setState({isLoading:false})\n        })\n    }\n    render(){\n        const {match} = this.props\n        const {isLoading} = this.props\n\n\n        return(\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} render={(props)=> <vitrineOverviewWithSpinner isLoading={isLoading} {...props}/>} />\n                <Route  path={`${match.path}/:collectionId`} render={(props)=><collectionPageWithSpinner isLoading={isLoading} {...props}/>}  />\n            </div>\n        )\n    }\n}\n    const mapDispactchToProps = dispatch => ({\n        initCollectionData: collectionMap => dispatch(initCollectionsData(collectionMap))\n    })\nexport default connect(null, mapDispactchToProps) (Boutique);"]},"metadata":{},"sourceType":"module"}