{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/components/sign-up/sign-up.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport CustomButton from '../custom-button/custom-button';\nimport FormInput from '../form-input/form-input';\nimport { connect } from 'react-redux';\nimport './sign-up.scss';\nimport { signUpStart } from '../../redux/user/user.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    /* const {displayName, email, password, confirmPassword} = userCredentials; */\n\n    if (password !== confirmPassword) {\n      alert('le mot de passe ne correspond pas');\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"J'ai pas de compte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: \"S'enregistrer avec email et mot de pass\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Nom complet\",\n        name: \"displayName\",\n        type: \"text\",\n        value: displayName,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Mot de passe\",\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Confirme mot de pass\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        value: confirmPassword,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"S'ENREGISTRER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignUp, \"9tsSkSUHSGF87im2u7JYzI9KGRA=\");\n\n_c = SignUp;\n\nconst mapDispatchToprops = dispatch => ({\n  signUpStart: userCredentails => dispatch(signUpStart(userCredentails))\n});\n\nexport default connect(null, mapDispatchToprops)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/components/sign-up/sign-up.jsx"],"names":["React","useState","auth","createUserProfileDocument","CustomButton","FormInput","connect","signUpStart","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleChange","event","name","value","target","handleSubmit","preventDefault","alert","mapDispatchToprops","dispatch","userCredentails"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport CustomButton from '../custom-button/custom-button';\nimport FormInput from '../form-input/form-input';\nimport {connect} from 'react-redux'\nimport './sign-up.scss'\nimport { signUpStart } from '../../redux/user/user.action';\n\n\nconst SignUp =({signUpStart})=>{\n   const [userCredentials, setUserCredentials]=useState({\n    displayName:'',\n    email: '',\n    password:'',\n    confirmPassword: ''\n});\n\n   const handleChange = event => {\n        const {name, value} = event.target;\n        setUserCredentials({...userCredentials, [name]:value})\n    }\n\n   const {displayName, email, password, confirmPassword} = userCredentials;\n\n   const handleSubmit = async event =>{\n        event.preventDefault();\n        /* const {displayName, email, password, confirmPassword} = userCredentials; */\n\n        if(password !== confirmPassword ){\n            alert('le mot de passe ne correspond pas');\n            return;\n        } \n\n        signUpStart({displayName, email, password})\n    }\n   \n        return(\n            <div className=\"sign-up\">\n                <h2>J'ai pas de compte</h2>\n                <span className=\"title\">S'enregistrer avec email et mot de pass</span>\n                <form onSubmit={handleSubmit}>\n                    <FormInput label=\"Nom complet\" name=\"displayName\" type=\"text\" value={displayName} handleChange={handleChange}/>\n                    <FormInput label=\"Email\" name=\"email\" type=\"email\" value={email} handleChange={handleChange}/>\n                    <FormInput label=\"Mot de passe\" name=\"password\" type=\"password\" value={password} handleChange={handleChange}/>\n                    <FormInput label=\"Confirme mot de pass\" name=\"confirmPassword\" type=\"password\" value={confirmPassword} handleChange={handleChange}/>\n                    <CustomButton type=\"submit\">S'ENREGISTRER</CustomButton>\n                </form>\n            </div>\n        )\n    }\n\nconst mapDispatchToprops = dispatch =>({\n    signUpStart:userCredentails=>dispatch(signUpStart(userCredentails))\n})\n\nexport default connect(null, mapDispatchToprops)(SignUp);"]},"metadata":{},"sourceType":"module"}