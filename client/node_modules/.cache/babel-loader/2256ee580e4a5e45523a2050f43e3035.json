{"ast":null,"code":"import { convertedtCollectionSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport boutiqueActionType from \"./types.boutique\";\nexport const initCollectionsData = collectionMap => ({\n  type: boutiqueActionType.GET_COLLECTION_DATA,\n  payload: collectionMap\n});\nexport const fetchCollectionStart = () => ({\n  type: boutiqueActionType.FETCH_COLLECTION_START\n});\nexport const fetchCollectionSuccess = collectionMaps => ({\n  type: boutiqueActionType.FETCH_COLLECTION_SUCCESS,\n  payload: collectionMaps\n});\nexport const fectCollectionFail = errorMessage => ({\n  type: boutiqueActionType.FETCH_COLLECTION_FAILLURE,\n  payload: errorMessage\n});\nexport const fetchCollectionStratAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertedtCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionMap));\n    }).catch(err);\n  };\n};","map":{"version":3,"sources":["/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/redux/boutique/actions.boutuique.js"],"names":["convertedtCollectionSnapshotToMap","firestore","boutiqueActionType","initCollectionsData","collectionMap","type","GET_COLLECTION_DATA","payload","fetchCollectionStart","FETCH_COLLECTION_START","fetchCollectionSuccess","collectionMaps","FETCH_COLLECTION_SUCCESS","fectCollectionFail","errorMessage","FETCH_COLLECTION_FAILLURE","fetchCollectionStratAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","err"],"mappings":"AAAA,SAASA,iCAAT,EAA4CC,SAA5C,QAA6D,+BAA7D;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;AAEA,OAAO,MAAMC,mBAAmB,GAAGC,aAAa,KAAI;AAChDC,EAAAA,IAAI,EAAEH,kBAAkB,CAACI,mBADuB;AAEhDC,EAAAA,OAAO,EAAEH;AAFuC,CAAJ,CAAzC;AAKP,OAAO,MAAMI,oBAAoB,GAAG,OAAK;AACrCH,EAAAA,IAAI,EAACH,kBAAkB,CAACO;AADa,CAAL,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAI;AACpDN,EAAAA,IAAI,EAACH,kBAAkB,CAACU,wBAD4B;AAEpDL,EAAAA,OAAO,EAACI;AAF4C,CAAJ,CAA7C;AAKP,OAAO,MAAME,kBAAkB,GAAGC,YAAY,KAAI;AAC9CT,EAAAA,IAAI,EAACH,kBAAkB,CAACa,yBADsB;AAE9CR,EAAAA,OAAO,EAACO;AAFsC,CAAJ,CAAvC;AAKP,OAAO,MAAME,yBAAyB,GAAG,MAAI;AACzC,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGjB,SAAS,CAACkB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACT,oBAAoB,EAArB,CAAR;AACAU,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAE;AAC/B,YAAMlB,aAAa,GAAIJ,iCAAiC,CAACsB,QAAD,CAAxD;AACAL,MAAAA,QAAQ,CAACP,sBAAsB,CAACN,aAAD,CAAvB,CAAR;AACD,KAHH,EAGKmB,KAHL,CAGWC,GAHX;AAIH,GAPD;AAQH,CATM","sourcesContent":["import { convertedtCollectionSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport boutiqueActionType from \"./types.boutique\";\n\nexport const initCollectionsData = collectionMap =>({\n    type: boutiqueActionType.GET_COLLECTION_DATA,\n    payload: collectionMap\n});\n\nexport const fetchCollectionStart = ()=>({\n    type:boutiqueActionType.FETCH_COLLECTION_START\n});\n\nexport const fetchCollectionSuccess = collectionMaps =>({\n    type:boutiqueActionType.FETCH_COLLECTION_SUCCESS,\n    payload:collectionMaps\n});\n\nexport const fectCollectionFail = errorMessage =>({\n    type:boutiqueActionType.FETCH_COLLECTION_FAILLURE,\n    payload:errorMessage\n})\n\nexport const fetchCollectionStratAsync = ()=>{\n    return dispatch => {\n        const collectionRef = firestore.collection('collections'); \n        dispatch(fetchCollectionStart());   \n        collectionRef.get().then(snapshot=>{\n            const collectionMap =  convertedtCollectionSnapshotToMap(snapshot);\n            dispatch(fetchCollectionSuccess(collectionMap));\n          }).catch(err);\n    }\n}"]},"metadata":{},"sourceType":"module"}