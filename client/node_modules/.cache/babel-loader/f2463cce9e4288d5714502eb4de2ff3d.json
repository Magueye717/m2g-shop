{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport boutiqueActionType from './types.boutique';\nimport { firestore, convertedtCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFail } from './actions.boutuique';\n\nfunction* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef.ge();\n    const collectionsMap = yield call(convertedtCollectionSnapshotToMap, snapShot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFail(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(boutiqueActionType.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/redux/boutique/boutique.sagas.js"],"names":["takeEvery","call","put","boutiqueActionType","firestore","convertedtCollectionSnapshotToMap","fetchCollectionSuccess","fetchCollectionFail","fetchCollectionAsync","collectionRef","collection","snapShot","ge","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,QAAmC,oBAAnC;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;AACA,SAASC,SAAT,EAAoBC,iCAApB,QAA6D,+BAA7D;AACA,SAASC,sBAAT,EAAiCC,mBAAjC,QAA4D,qBAA5D;;AAGA,UAAUC,oBAAV,GAAgC;AAC7B,MAAI;AACC,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,EAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACI,iCAAD,EAAoCM,QAApC,CAAjC;AACA,UAAMT,GAAG,CAACI,sBAAsB,CAACO,cAAD,CAAvB,CAAT;AAEJ,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMZ,GAAG,CAACK,mBAAmB,CAACO,KAAK,CAACC,OAAP,CAApB,CAAT;AACH;AACH;;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACvC,QAAMhB,SAAS,CAACG,kBAAkB,CAACc,sBAApB,EAA4CT,oBAA5C,CAAf;AACA","sourcesContent":["import {takeEvery, call, put} from 'redux-saga/effects';\nimport boutiqueActionType from './types.boutique';\nimport { firestore, convertedtCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFail } from './actions.boutuique';\n\n\nfunction* fetchCollectionAsync(){\n   try {\n        const collectionRef = firestore.collection('collections');\n        const snapShot = yield collectionRef.ge();\n        const collectionsMap = yield call(convertedtCollectionSnapshotToMap, snapShot)\n        yield put(fetchCollectionSuccess(collectionsMap));\n\n   } catch (error) {\n       yield put(fetchCollectionFail(error.message))\n   }\n}\n\nexport function* fetchCollectionsStart(){\n yield takeEvery(boutiqueActionType.FETCH_COLLECTION_START, fetchCollectionAsync)\n}"]},"metadata":{},"sourceType":"module"}