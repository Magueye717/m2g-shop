{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/components/sign-in/SignIn.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport './sign-in.scss';\nimport { googleSignInStart } from '../../redux/user/user.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"J'ai d\\xE9ja un compte\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"S'identifer avec email et mot de pass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          label: \"email\",\n          value: this.state.email,\n          handleChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          label: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"CONNEXION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"CONNEXION AVEC GOOGLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchtoProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchtoProps)(SignIn);","map":{"version":3,"sources":["/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/components/sign-in/SignIn.jsx"],"names":["React","FormInput","CustomButton","auth","signInWithGoogle","connect","googleSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","message","handleChange","e","value","name","target","render","mapDispatchtoProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport './sign-in.scss';\nimport { googleSignInStart } from '../../redux/user/user.action';\n\nclass SignIn extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state ={\n            email: '',\n            password: ''\n        }\n    }\n\n     handleSubmit = async event=> {\n        event.preventDefault();\n\n        const { email, password } = this.state;\n        try {\n          await auth.signInWithEmailAndPassword(email, password);\n          this.setState({ email: '', password: '' });\n        } catch (error) {\n          console.log(error.message);\n        }\n    }\n\n    handleChange = e => {\n        const {value, name} = e.target ;\n        this.setState({[name]:value})\n    }\n    \n\n    render(){\n        const {googleSignInStart}=this.props;\n        return(\n            <div className=\"sign-in\" onSubmit={this.handleSubmit}>\n                <h2>J'ai d√©ja un compte</h2>\n                <span>S'identifer avec email et mot de pass</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput name='email' type=\"email\" label=\"email\" value={this.state.email} handleChange={this.handleChange} required/>\n                    <FormInput name='password' type=\"password\" label=\"password\" value={this.state.password} handleChange={this.handleChange} required />\n                    <div className=\"buttons\">\n                    <CustomButton type='submit'>CONNEXION</CustomButton>\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>CONNEXION AVEC GOOGLE</CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchtoProps = dispatch=>({\n    googleSignInStart:()=>dispatch(googleSignInStart())\n})\n\nexport default connect(null, mapDispatchtoProps) (SignIn);"]},"metadata":{},"sourceType":"module"}