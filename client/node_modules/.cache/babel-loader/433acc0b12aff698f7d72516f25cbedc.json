{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInFailure, signInSuccess, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from './user.action';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const authUser = yield getCurrentUser();\n    if (!authUser) return;\n    yield getSnapshotFromUserAuth(authUser);\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOut() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOut)]);\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInFailure","signInSuccess","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","error","signUp","payload","email","password","displayName","user","createUserWithEmailAndPassword","signOut","isUserAuthenticated","authUser","signInWithGoogle","signInWithPopup","signInWithEmail","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOut","SIGN_OUT_START","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onSignUpStart","SIGN_UP_START","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACIC,IADJ,EAEIC,cAFJ,EAGIC,yBAHJ,EAIIC,cAJJ,QAKO,+BALP;AAMA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,cAHJ,EAIIC,cAJJ,EAKIC,aALJ,EAMIC,aANJ,QAOO,eAPP;AASA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA2C;AAC9C,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMd,IAAI,CAACI,yBAAD,EAA2BS,QAA3B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMlB,GAAG,CAACS,aAAa,CAAC;AAACU,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAqB,SAAGF,YAAY,CAACG,IAAb;AAAxB,KAAD,CAAd,CAAT;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACb,UAAMrB,GAAG,CAACQ,aAAa,CAACa,KAAD,CAAd,CAAT;AACF;AACJ;AAED,OAAO,UAAUC,MAAV,CAAiB;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB;AAAT,CAAjB,EAA0D;AAC7D,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMvB,IAAI,CAACwB,8BAAL,CAAoCJ,KAApC,EAA2CC,QAA3C,CAArB;AACH,GAFD,CAEE,OAAOJ,KAAP,EAAc;AACZ,UAAMrB,GAAG,CAACY,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUQ,OAAV,GAAmB;AACtB,MAAI;AACA,UAAMzB,IAAI,CAACyB,OAAL,EAAN;AACA,UAAM7B,GAAG,CAACU,cAAc,EAAf,CAAT;AACH,GAHD,CAGE,OAAOW,KAAP,EAAc;AACZ,UAAMrB,GAAG,CAACW,cAAc,CAACU,KAAD,CAAf,CAAT;AAEH;AACJ;AAED,OAAO,UAAUS,mBAAV,GAA+B;AAClC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMxB,cAAc,EAArC;AACA,QAAG,CAACwB,QAAJ,EAAa;AACb,UAAMjB,uBAAuB,CAACiB,QAAD,CAA7B;AACH,GAJD,CAIE,OAAOV,KAAP,EAAc;AACZrB,IAAAA,GAAG,CAACQ,aAAa,CAACa,KAAD,CAAd,CAAH;AACH;AACJ;AAED,OAAO,UAAUW,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAACL,MAAAA;AAAD,QAAS,MAAMvB,IAAI,CAAC6B,eAAL,CAAqB5B,cAArB,CAArB;AACA,UAAMS,uBAAuB,CAACa,IAAD,CAA7B;AACH,GAHD,CAGE,OAAON,KAAP,EAAc;AACb,UAAMrB,GAAG,CAACQ,aAAa,CAACa,KAAD,CAAd,CAAT;AACF;AACJ;AAGD,OAAO,UAAUa,eAAV,CAA0B;AAACX,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAT,CAA1B,EAAsD;AACzD,MAAI;AACA,UAAM;AAACE,MAAAA;AAAD,QAAS,MAAMvB,IAAI,CAAC+B,0BAAL,CAAgCX,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMX,uBAAuB,CAACa,IAAD,CAA7B;AAEH,GAJD,CAIE,OAAON,KAAP,EAAc;AACZ,UAAMrB,GAAG,CAACQ,aAAa,CAACa,KAAD,CAAd,CAAT;AACH;AACJ;AAID,OAAO,UAAUe,kBAAV,GAA8B;AACjC,QAAMrC,UAAU,CAACI,eAAe,CAACkC,mBAAjB,EAAsCH,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUI,kBAAV,GAA8B;AACjC,QAAMvC,UAAU,CAACI,eAAe,CAACoC,kBAAjB,EAAqCT,mBAArC,CAAhB;AACH;AAED,OAAO,UAAUU,SAAV,GAAqB;AACxB,QAAMzC,UAAU,CAACI,eAAe,CAACsC,cAAjB,EAAiCZ,OAAjC,CAAhB;AACH;AAED,OAAO,UAAUa,mBAAV,GAA+B;AAClC,QAAM3C,UAAU,CAACI,eAAe,CAACwC,oBAAjB,EAAuCX,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUY,aAAV,GAAyB;AAC5B,QAAM7C,UAAU,CAACI,eAAe,CAAC0C,aAAjB,EAAgCvB,MAAhC,CAAhB;AACH;AAED,OAAO,UAAUwB,QAAV,GAAoB;AACvB,QAAM7C,GAAG,CAAC,CACNC,IAAI,CAACwC,mBAAD,CADE,EAENxC,IAAI,CAACkC,kBAAD,CAFE,EAGNlC,IAAI,CAAC4B,mBAAD,CAHE,EAIN5B,IAAI,CAACsC,SAAD,CAJE,CAAD,CAAT;AAMH","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport {\n    auth,\n    googleProvider,\n    createUserProfileDocument,\n    getCurrentUser\n} from '../../firebase/firebase.utils';\nimport {\n    signInFailure,\n    signInSuccess,\n    signOutSuccess,\n    signOutFailure,\n    signUpFailure,\n    signUpSuccess\n} from './user.action';\n\nexport function* getSnapshotFromUserAuth(userAuth){\n    try{\n        const userRef = yield call(createUserProfileDocument,userAuth);\n        const userSnapShot = yield userRef.get();\n        yield put(signInSuccess({id:userSnapShot.id, ...userSnapShot.data()}));\n    } catch (error) {\n       yield put(signInFailure(error))\n    }\n}\n\nexport function* signUp({payload:{email, password, displayName}}){\n    try {\n        const {user} = yield auth.createUserWithEmailAndPassword(email, password);\n    } catch (error) {\n        yield put(signUpFailure(error))\n    }\n}\n\nexport function* signOut(){\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    } catch (error) {\n        yield put(signOutFailure(error));\n        \n    }\n}\n\nexport function* isUserAuthenticated(){\n    try {\n        const authUser = yield getCurrentUser();\n        if(!authUser)return;\n        yield getSnapshotFromUserAuth(authUser);\n    } catch (error) {\n        put(signInFailure(error))\n    }\n}\n\nexport function* signInWithGoogle (){\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n       yield put(signInFailure(error))\n    }\n}\n\n\nexport function* signInWithEmail({payload:{email, password}}){\n    try {\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\n\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession(){\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onSignOut(){\n    yield takeLatest(userActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onGoogleSignInStart(){\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onSignUpStart(){\n    yield takeLatest(userActionTypes.SIGN_UP_START, signUp)\n}\n\nexport function* userSaga(){\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(isUserAuthenticated),\n        call(onSignOut)\n    ])\n}"]},"metadata":{},"sourceType":"module"}