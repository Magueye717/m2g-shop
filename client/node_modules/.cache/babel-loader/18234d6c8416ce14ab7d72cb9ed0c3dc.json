{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/components/sign-in/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport './sign-in.scss';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"J'ai d\\xE9ja un compte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"S'identifer avec email et mot de pass\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        label: \"email\",\n        value: email,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        label: \"password\",\n        value: password,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"CONNEXION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"CONNEXION AVEC GOOGLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"3vDS4eoMWD12QoUIu7ATM6FNUPo=\");\n\n_c = SignIn;\n\nconst mapDispatchtoProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchtoProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/src/components/sign-in/SignIn.jsx"],"names":["React","useState","FormInput","CustomButton","auth","signInWithGoogle","connect","googleSignInStart","emailSignInStart","SignIn","userCredentials","setUserCredentials","email","password","handleSubmit","event","preventDefault","handleChange","e","value","name","target","mapDispatchtoProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport './sign-in.scss';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\n\nconst SignIn = ({emailSignInStart, googleSignInStart})=> {\n    const [userCredentials, setUserCredentials]=useState({\n        email: '',\n        password: ''})\n\n    const { email, password } = userCredentials;\n    \n    const handleSubmit = async event=> {\n        event.preventDefault();\n        emailSignInStart(email, password);\n    }\n\n    const handleChange = e => {\n        const {value, name} = e.target ;\n        setUserCredentials({...userCredentials,[name]:value})\n    }\n    \n        return(\n            <div className=\"sign-in\" onSubmit={handleSubmit}>\n                <h2>J'ai d√©ja un compte</h2>\n                <span>S'identifer avec email et mot de pass</span>\n\n                <form onSubmit={handleSubmit}>\n                    <FormInput name='email' type=\"email\" label=\"email\" value={email} handleChange={handleChange} required/>\n                    <FormInput name='password' type=\"password\" label=\"password\" value={password} handleChange={handleChange} required />\n                    <div className=\"buttons\">\n                    <CustomButton type='submit'>CONNEXION</CustomButton>\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>CONNEXION AVEC GOOGLE</CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n}\n\nconst mapDispatchtoProps = dispatch=>({\n    googleSignInStart:()=>dispatch(googleSignInStart()),\n    emailSignInStart:(email, password)=>dispatch(emailSignInStart({email, password}))\n})\n\nexport default connect(null, mapDispatchtoProps) (SignIn);"]},"metadata":{},"sourceType":"module"}