{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/client/src/components/card-dropdown/card-dropdown.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button';\nimport './card-dropdown.scss';\nimport CartItem from '../cart-item/cart-item';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport { toggleHiddenCardAction } from '../../redux/cart/cart.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"cart-dropdown\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-items\",\n    children: cartItems.length ? cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"empty-message\",\n      children: \"Aucun article dans votre panier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n    onClick: () => {\n      history.push('/solde');\n      dispatch(toggleHiddenCardAction());\n    },\n    children: \"VOIR PANIER\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 5\n}, this); // vas sur le state et recupere le la variable cart sur le root-reducer et destructure le en cartItems\n\n/* const mapStateToProps = ({cart:{cartItems}}) =>({\n    cartItems \n}); */\n\n\n_c = CardDropdown;\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CardDropdown));\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDropdown\");","map":{"version":3,"sources":["/Users/macbook/Desktop/React-Udemy/my-exercices/e-commerce/client/src/components/card-dropdown/card-dropdown.jsx"],"names":["React","connect","CustomButton","CartItem","selectCartItems","createStructuredSelector","withRouter","toggleHiddenCardAction","CardDropdown","cartItems","history","dispatch","length","map","item","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAO,sBAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,sBAAT,QAAuC,+BAAvC;;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,kBACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA,0BACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cACKF,SAAS,CAACG,MAAV,GACAH,SAAS,CAACI,GAAV,CAAcC,IAAI,iBACnB,QAAC,QAAD;AAAyB,MAAA,IAAI,EAAEA;AAA/B,OAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YADC,CADA,gBAIA;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALL;AAAA;AAAA;AAAA;AAAA,UADJ,eAQQ,QAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAI;AACvBL,MAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACAL,MAAAA,QAAQ,CAACJ,sBAAsB,EAAvB,CAAR;AACC,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARR;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,C,CAiBA;;AACA;AACA;AACA;;;KApBMC,Y;AAsBN,MAAMS,eAAe,GAAGZ,wBAAwB,CAAC;AAC7CI,EAAAA,SAAS,EAAGL;AADiC,CAAD,CAAhD;AAKA,eAAeE,UAAU,CAACL,OAAO,CAACgB,eAAD,CAAP,CAA0BT,YAA1B,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button';\nimport './card-dropdown.scss';\nimport CartItem from '../cart-item/cart-item';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport { toggleHiddenCardAction } from '../../redux/cart/cart.actions';\n\n\nconst CardDropdown = ({cartItems, history, dispatch})=>(\n    <div className=\"cart-dropdown\">\n        <div className=\"cart-items\">\n            {cartItems.length ?  \n            (cartItems.map(item=>(\n            <CartItem key={item.id}  item={item}/>\n            ))): \n            (<span className=\"empty-message\">Aucun article dans votre panier</span>)}\n        </div>\n            <CustomButton onClick={()=>{\n                history.push('/solde'); \n                dispatch(toggleHiddenCardAction())\n                }}>VOIR PANIER\n            </CustomButton>\n    </div>\n);\n\n// vas sur le state et recupere le la variable cart sur le root-reducer et destructure le en cartItems\n/* const mapStateToProps = ({cart:{cartItems}}) =>({\n    cartItems \n}); */\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems : selectCartItems\n});\n\n\nexport default withRouter(connect(mapStateToProps) (CardDropdown));"]},"metadata":{},"sourceType":"module"}